name: Move referenced issue to In progress when PR is opened

on:
  pull_request:
    types: [opened]

jobs:
  move-issue-to-in-progress:
    runs-on: ubuntu-latest
    steps:
      - name: Extract referenced issue number from PR body
        id: extract_issue
        run: |
          ISSUE_NUMBER=$(echo "${{ github.event.pull_request.body }}" | grep -oE '#[0-9]+' | head -n 1 | tr -d '#')
          echo "Referenced issue: $ISSUE_NUMBER"
          if [[ -n "$ISSUE_NUMBER" ]]; then
            echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          fi

      - name: Get referenced issue node_id
        id: get_node_id
        if: steps.extract_issue.outputs.issue_number != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node_id=$(gh api repos/${{ github.repository }}/issues/${{ steps.extract_issue.outputs.issue_number }} --jq '.node_id')
          echo "issue_node_id=$node_id" >> $GITHUB_OUTPUT

      - name: Find ProjectV2Item for referenced issue
        id: find_project_item
        if: steps.get_node_id.outputs.issue_node_id != ''
        env:
          GH_TOKEN: ${{ secrets.PAT_PROJECT }}
        run: |
          PROJECT_ID="PVT_kwDODKvGH84A5gwC"
          ISSUE_NODE_ID="${{ steps.get_node_id.outputs.issue_node_id }}"
          query='
          query {
            organization(login: "Grupo-10-CC3S2") {
              projectV2(number: 1) {
                items(first: 100) {
                  nodes {
                    id
                    content {
                      ... on Issue { id number }
                    }
                  }
                }
              }
            }
          }'
          result=$(gh api graphql -f query="$query")
          item_id=$(echo "$result" | jq -r --arg NODE_ID "$ISSUE_NODE_ID" '.data.organization.projectV2.items.nodes[] | select(.content != null and .content.id == $NODE_ID) | .id')
          echo "project_item_id=$item_id" >> $GITHUB_OUTPUT

      - name: Move issue to 'In progress'
        if: steps.find_project_item.outputs.project_item_id != ''
        env:
          GH_TOKEN: ${{ secrets.PAT_PROJECT }}
          PROJECT_ID: PVT_kwDODKvGH84A5gwC
          FIELD_ID: PVTSSF_lADODKvGH84A5gwCzguTAwI
          OPTION_ID: 47fc9ee4
          ITEM_ID: ${{ steps.find_project_item.outputs.project_item_id }}
        run: |
          curl -X POST -H "Authorization: bearer $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "query": "mutation { updateProjectV2ItemFieldValue(input: {projectId: \"'$PROJECT_ID'\", itemId: \"'$ITEM_ID'\", fieldId: \"'$FIELD_ID'\", value: { singleSelectOptionId: \"'$OPTION_ID'\" } }) { projectV2Item { id } } }"
            }' https://api.github.com/graphql